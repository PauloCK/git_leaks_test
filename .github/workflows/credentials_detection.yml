name: Credentials Detection

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  scan:
    name: Gitleaks Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Fetch full history for comprehensive scanning
          fetch-depth: 0

      - name: Determine scan range
        id: scan_range
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            BASE_COMMIT="${{ github.event.pull_request.base.sha }}"
            HEAD_COMMIT="${{ github.event.pull_request.head.sha }}"
          else
            # For push events, scan the current commit
            BASE_COMMIT="${{ github.event.before }}"
            HEAD_COMMIT="${{ github.event.after }}"
            
            # Handle first push to a new branch
            if [[ "$BASE_COMMIT" == "0000000000000000000000000000000000000000" ]]; then
              BASE_COMMIT="HEAD~1"
            fi
          fi
          
          echo "base_commit=$BASE_COMMIT" >> $GITHUB_OUTPUT
          echo "head_commit=$HEAD_COMMIT" >> $GITHUB_OUTPUT
          echo "Base commit: $BASE_COMMIT"
          echo "Head commit: $HEAD_COMMIT"

      - name: List files to be scanned
        run: |
          echo "Files being scanned:"
          git diff --name-only ${{ steps.scan_range.outputs.base_commit }} ${{ steps.scan_range.outputs.head_commit }} || echo "Unable to diff commits"

      - name: Run Gitleaks Scan
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }} # Only required for Gitleaks Enterprise
          GITLEAKS_ENABLE_SUMMARY: false  # Disable summary to avoid secret exposure
        with:
          config-path: .gitleaks.toml

      - name: Upload Gitleaks report
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-report-${{ github.sha }}
          path: results.sarif
          retention-days: 30

      - name: Comment on PR (if credentials found)
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '⚠️ **Gitleaks detected potential credentials in this PR!**\n\nPlease review the scan results and remove any exposed secrets before merging.\n\nCheck the workflow run for details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}'
            })
